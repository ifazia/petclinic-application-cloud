name: Staging Deploy Workflow
run-name: Starting to deploy ${{ inputs.service-name }} to staging
on:
  workflow_call:
    inputs:
      service-name:
        required: true
        type: string
      service-version:
        required: true
        type: string

jobs:
  deploy-the-service:
    runs-on: ubuntu-22.04
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set service key based on service name
        id: set-service-key
        run: |
          case "${{ inputs.service-name }}" in
            spring-petclinic-api-gateway)
              echo "SERVICE_KEY=apigateway" >> $GITHUB_ENV
              ;;
            spring-petclinic-customers-service)
              echo "SERVICE_KEY=customersservice" >> $GITHUB_ENV
              ;;
            spring-petclinic-vets-service)
              echo "SERVICE_KEY=vetsservice" >> $GITHUB_ENV
              ;;
            spring-petclinic-visits-service)
              echo "SERVICE_KEY=visitsservice" >> $GITHUB_ENV
              ;;
            *)
              echo "Unsupported service: ${{ inputs.service-name }}"  # Log an error message
              exit 1  # Exit the script with an error
              ;;
          esac

      - name: Generate staging-values.yaml
        run: |
          cat > helmchart/staging-values.yaml <<EOF
          #namespace: staging
          $(if [ "$SERVICE_KEY" == "apigateway" ]; then echo "
            apigateway:
              image: public.ecr.aws/i7s8l3z4/spring-petclinic-api-gateway
              version: ${{ inputs.service-version }}
              replicaCount: 2
          "; elif [ "$SERVICE_KEY" == "customersservice" ]; then echo "
            customersservice:
              image: public.ecr.aws/i7s8l3z4/spring-petclinic-customers-service
              version: ${{ inputs.service-version }}
              replicaCount: 1
              database:
                host: customer-db.c34i6uggo2hc.eu-west-3.rds.amazonaws.com:3306
                name: customerdb
                username: petcliniccustomer
                password: \"${{ secrets.DB_PASSWORD_CUSTOMER }}\"
              jdbcUrl: jdbc:mysql://customer-db.c34i6uggo2hc.eu-west-3.rds.amazonaws.com:3306/customerdb?user=petcliniccustomer&password=\${{ secrets.DB_PASSWORD_CUSTOMER }}
          "; elif [ "$SERVICE_KEY" == "vetsservice" ]; then echo "
              vetsservice:
                image: public.ecr.aws/i7s8l3z4/spring-petclinic-vets-service
                version: ${{ inputs.service-version }}
                replicaCount: 1
                database:
                  host: vet-db.c34i6uggo2hc.eu-west-3.rds.amazonaws.com:3306
                  name: vetdb
                  username: petclinicvet
                  password: \"${{ secrets.DB_PASSWORD_VET }}\"
                jdbcUrl: jdbc:mysql://vet-db.c34i6uggo2hc.eu-west-3.rds.amazonaws.com:3306/vetdb?user=petclinicvet&password=\${{ secrets.DB_PASSWORD_VET }}
          "; elif [ "$SERVICE_KEY" == "visitsservice" ]; then echo "
              visitsservice:
                image: public.ecr.aws/i7s8l3z4/spring-petclinic-visits-service
                version: ${{ inputs.service-version }}
                replicaCount: 1
                database:
                  host: visit-db.c34i6uggo2hc.eu-west-3.rds.amazonaws.com:3306
                  name: visitdb
                  username: petclinicvisit
                  password: \"${{ secrets.DB_PASSWORD_VISIT }}\"
                jdbcUrl: jdbc:mysql://visit-db.c34i6uggo2hc.eu-west-3.rds.amazonaws.com:3306/visitdb?user=petclinicvisit&password=\${{ secrets.DB_PASSWORD_VISIT }}
          "; else echo "
              Unsupported service: ${{ inputs.service-name }}
          "; fi)
          EOF

      - name: Deploy Helm to Staging
        uses: bitovi/github-actions-deploy-eks-helm@v1.2.9
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-3
          cluster-name: petclinic-eks
          config-files: helmchart/staging-values.yaml
          chart-path: helmchart/
          name: petclinic-staging
          action: install
          dry-run: false
          timeout: 0s
          update-deps: true
