name: Production Deploy Workflow
run-name: Starting to deploy ${{ inputs.service-name }} to production
on:
  workflow_call:
    inputs:
      service-name:
        required: true
        type: string
      service-version:
        required: true
        type: string

jobs:
  deploy-the-service:
    runs-on: ubuntu-22.04
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --region us-east-1 --name petclinic-eks

      - name: Check if namespace exists and update metadata
        id: check_namespace
        run: |
          if kubectl get namespace production; then
            echo "Namespace production exists, updating metadata..."
            kubectl annotate namespace production meta.helm.sh/release-name=petclinic-production --overwrite
            kubectl annotate namespace production meta.helm.sh/release-namespace=production --overwrite
            kubectl label namespace production app.kubernetes.io/managed-by=Helm --overwrite
          else
            echo "Namespace production does not exist, creating it..."
            kubectl create namespace production
            kubectl annotate namespace production meta.helm.sh/release-name=petclinic-production
            kubectl annotate namespace production meta.helm.sh/release-namespace=production
            kubectl label namespace production app.kubernetes.io/managed-by=Helm
          fi

      - name: Create or Update Database Secret
        env:
          DB_PASSWORD_BASE64: ${{ secrets.DB_PASSWORD_BASE64 }}
        run: |
          kubectl create secret generic database-secret \
            --namespace production \
            --from-literal=dbpassword=$(echo $DB_PASSWORD_BASE64 | base64 --decode) \
            --dry-run=client -o yaml | kubectl apply -f -

      - name: Deploy Helm to production
        uses: bitovi/github-actions-deploy-eks-helm@v1.2.9
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
          cluster-name: petclinic-eks
          config-files: helmchart/prod-values.yaml
          chart-path: helmchart/
          name: petclinic-production
          action: install  
          dry-run: false
          timeout: 0s
          update-deps: true
          namespace: production