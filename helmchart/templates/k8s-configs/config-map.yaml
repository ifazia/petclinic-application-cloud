apiVersion: v1
kind: ConfigMap
metadata:
  name: petclinic-config
  namespace: {{ .Values.namespace }}
data:
  application-primary.yaml: |-
    spring:
      datasource:
        url: jdbc:mysql://customer-db.c5mqwqo0utao.us-east-1.rds.amazonaws.com:3306/customerdb
        username: ${SPRING_DATASOURCE_USERNAME}
        password: ${SPRING_DATASOURCE_PASSWORD}
        schema: classpath*:db/mysql/schema.sql
        data: classpath*:db/mysql/data.sql
        platform: mysql
        initialization-mode: always
      jpa:
        hibernate:
          ddl-auto: none
        show-sql: true

  application-secondary.yaml: |-
    spring:
      datasource:
        url: jdbc:mysql://vet-db.c5mqwqo0utao.us-east-1.rds.amazonaws.com:3306/vetdb
        username: ${SPRING_DATASOURCE_USERNAME}
        password: ${SPRING_DATASOURCE_PASSWORD}
        schema: classpath*:db/mysql/schema.sql
        data: classpath*:db/mysql/data.sql
        platform: mysql
        initialization-mode: always
      jpa:
        hibernate:
          ddl-auto: none
        show-sql: true

  application-tertiary.yaml: |-
    spring:
      datasource:
        url: jdbc:mysql://visit-db.c5mqwqo0utao.us-east-1.rds.amazonaws.com:3306/visitdb
        username: ${SPRING_DATASOURCE_USERNAME}
        password: ${SPRING_DATASOURCE_PASSWORD}
        schema: classpath*:db/mysql/schema.sql
        data: classpath*:db/mysql/data.sql
        platform: mysql
        initialization-mode: always
      jpa:
        hibernate:
          ddl-auto: none
        show-sql: true

    wavefront:
      application:
        name: spring-petclinic-k8s
      freemium-account: true

    # Logging
    logging.level.org.springframework: INFO

    # Metrics
    management:
      endpoint:
        health:
          probes:
            enabled: true
      health:
        livenessState:
          enabled: true
        readinessState:
          enabled: true
        restart:
          enabled: true
        metrics:
          enabled: true
        prometheus:
          enabled: true
      endpoints:
        web:
          exposure:
            include: '*'
      metrics:
        export:
          prometheus:
            enabled: true
          wavefront:
            enabled: false

    customers-service-id: http://customers-service.{{ .Values.namespace }}.svc.cluster.local:8080
    visits-service-id: http://vists-service.{{ .Values.namespace }}.svc.cluster.local:8080

    spring:
      datasource:
        schema: classpath*:db/mysql/schema.sql
        data: classpath*:db/mysql/data.sql
        platform: mysql
        initialization-mode: always

      jpa:
        show-sql: true
        hibernate:
          ddl-auto: none
          generate-ddl: false
      sleuth:
        sampler:
          probability: 1.0
        config:
          # Allow the microservices to override the remote properties with their own System properties or config file
          allow-override: true
          # Override configuration with any local property source
          override-none: true
      messages:
        basename: messages/messages
      cloud:
        kubernetes:
          discovery:
            enabled: true
        loadbalancer:
          ribbon:
            enabled: false
        gateway:
          x-forwarded:  
            enabled: true 
            for-enabled: true 
            proto-enabled: true 
            host-append: false  
            port-append: false  
            proto-append: false
          routes:
            - id: vets-service
              uri: http://vets-service.{{ .Values.namespace }}.svc.cluster.local:8080
              predicates:
                - Path=/api/vet/**
              filters:
                - StripPrefix=2
            - id: visits-service
              uri: http://visits-service.{{ .Values.namespace }}.svc.cluster.local:8080
              predicates:
                - Path=/api/visit/**
              filters:
                - StripPrefix=2
            - id: customers-service
              uri: http://customers-service.{{ .Values.namespace }}.svc.cluster.local:8080
              predicates:
                - Path=/api/customer/**
              filters:
                - StripPrefix=2
    vets:
      cache:
        ttl: 60
        heap-size: 101