apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway
  namespace: {{ .Values.namespace }}
  labels:
    app: api-gateway
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/path: "/actuator/prometheus"
    prometheus.io/port: "8080"
spec:
  replicas: {{ .Values.apigateway.replicaCount | default 1 }}
  selector:
    matchLabels:
      app: api-gateway
  template:
    metadata:
      labels:
        app: api-gateway
    spec:
      containers:
      - name: api-gateway
        image:  {{ .Values.apigateway.image }}:{{ .Values.apigateway.version }}
        env:
          - name: SPRING_PROFILES_ACTIVE
            value: kubernetes
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /actuator/health/liveness
            port: 8080
          initialDelaySeconds: 90
          periodSeconds: 5
        readinessProbe:
          httpGet:
            path: /actuator/health/readiness
            port: 8080
          initialDelaySeconds: 30
          #periodSeconds: 10
        lifecycle:
          preStop:
            exec:
              command: ["sh", "-c", "sleep 360"]
        resources:
          limits:
            memory: 1Gi
            cpu: 500m
          requests:
            cpu: 500m
            memory: 1Gi
        ports:
        - name: http
          containerPort: 8080
      restartPolicy: Always
status: {}
