apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: customers-service
  name: customers-service
  namespace: {{ .Values.namespace }}
spec:
  replicas: {{ .Values.customersservice.replicaCount }}
  selector:
    matchLabels:
      app: customers-service
  strategy: {}
  template:
    metadata:
      labels:
        app: customers-service
    spec:
      serviceAccountName: rds-access-sa
      containers:
      - image: {{ .Values.customersservice.image }}:{{ .Values.customersservice.version }}
        name: customers-service
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            port: 8080
            path: /actuator/health/liveness
          initialDelaySeconds: 120
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3 
        readinessProbe:
          httpGet:
            port: 8080
            path: /actuator/health/readiness
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3  
        lifecycle:
          preStop:
            exec:
              command: ["sh", "-c", "sleep 10"]
        env:
        - name: SPRING_PROFILES_ACTIVE
          value:  kubernetes,test
        - name: SPRING_DATASOURCE_USERNAME
          value: {{ .Values.customersservice.database.username }}
        - name: DATABASE_URL
          value: {{ .Values.customersservice.jdbcUrl }}
        - name: SPRING_DATASOURCE_PASSWORD
          valueFrom:
             secretKeyRef:
               name: database-secret
               key: dbcustomerpassword
        ports:
        - containerPort: 8080
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
      restartPolicy: Always